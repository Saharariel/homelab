apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared-deployment
  namespace: utils
spec:
  replicas: 2
  selector:
    matchLabels:
      pod: cloudflared
  template:
    metadata:
      labels:
        pod: cloudflared
    spec:
      terminationGracePeriodSeconds: 30
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared:2025.9.1
          imagePullPolicy: IfNotPresent
          env:
            - name: TUNNEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: tunnel-token
                  key: token
          command:
            [
              "cloudflared",
              "tunnel",
              "--no-autoupdate",
              "--loglevel",
              "debug",
              "--metrics",
              "0.0.0.0:2000",
              "run",
            ]
          ports:
            - name: metrics
              containerPort: 2000
          resources:
            requests: { cpu: "50m", memory: "64Mi" }
            limits: { cpu: "200m", memory: "128Mi" }

          startupProbe:
            httpGet: { path: /ready, port: 2000 }
            periodSeconds: 5
            failureThreshold: 30 # ~150s

          readinessProbe:
            httpGet: { path: /ready, port: 2000 }
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3

          # <-- liveness uses TCP, not /ready
          livenessProbe:
            tcpSocket: { port: 2000 }
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 5

          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 5"]
